<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elex.oa.dao.project.ProjectLaborDao">

    <resultMap id="projectLabor" type="com.elex.oa.entity.project.ProjectLabor">
        <result column="id" javaType="string" property="id"></result>
        <result column="employee_number" javaType="string" property="employeeNumber"></result>
        <result column="employee_name" javaType="string" property="employeeName"></result>
        <result column="project_code" javaType="string" property="projectCode"></result>
        <result column="project_name" javaType="string" property="projectName"></result>
        <result column="filling_date" javaType="date" property="fillingDate"></result>
        <result column="labor_hour" javaType="decimal" property="laborHour"></result>
    </resultMap>

    <insert id="updateLaborHourInfo" parameterType="com.elex.oa.entity.project.ProjectLabor">
        INSERT INTO
            pro_labor(id,employee_number,employee_name,project_code,project_name,filling_date,labor_hour)
        VALUES
            (#{id},#{employeeNumber},#{employeeName},#{projectCode},#{projectName},#{fillingDate},#{laborHour})
        ON DUPLICATE KEY UPDATE
            id = #{id},
            employee_number = #{employeeNumber},
            employee_name = #{employeeName},
            project_code = #{projectCode},
            project_name = #{projectName},
            filling_date = #{fillingDate},
            labor_hour = #{laborHour}
    </insert>

    <select id="queryLaborHourInfo" parameterType="string" resultMap="projectLabor">
        SELECT * FROM pro_labor WHERE employee_number = #{employeeNumber}
        <if test="projectCode != '' and projectCode != null">
            AND project_code = #{projectCode}
        </if>
        <if test="startDate != '' and startDate != null and endDate != '' and endDate != null">
            AND filling_date BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <select id="queryDateLabor" parameterType="string" resultType="string">
        SELECT labor_hour FROM pro_labor WHERE employee_number = #{employeeNumber}
        <if test="projectCode != '' and projectCode != null">
            AND project_code = #{projectCode}
        </if>
        <if test="fillingDate != '' and fillingDate != null">
            AND filling_date = #{fillingDate}
        </if>
    </select>

    <select id="queryLaborStatus" resultType="string">
        SELECT MAX(locking_time) FROM pro_labor_month
    </select>

    <insert id="updateFrequentProjectInfo" parameterType="com.elex.oa.entity.project.ProjectLabor">
        INSERT INTO
            pro_common(employee_number,project_code)
        VALUES
            (#{employeeNumber},#{projectCode})
        ON DUPLICATE KEY UPDATE
            employee_number = #{employeeNumber},
            project_code = #{projectCode}
    </insert>

    <select id="queryFrequentProjectInfo" parameterType="string" resultType="string">
        SELECT project_code FROM pro_common WHERE employee_number = #{employeeNumber}
    </select>

    <update id="updateLockingInfo" parameterType="string">
        UPDATE pro_labor_month SET locking_time = #{date}
    </update>

    <select id="queryLaborHourInfoByDepartment" parameterType="string" resultType="string">
        SELECT SUM(labor_hour) FROM pro_labor WHERE employee_number = #{employeeNumber} AND filling_date BETWEEN #{startDate} AND #{endDate} AND project_code = #{projectCode}
    </select>

    <select id="queryProject" parameterType="string" resultMap="projectLabor">
        SELECT DISTINCT project_code,project_name FROM pro_labor WHERE employee_number = #{employeeNumber}
    </select>

    <select id="queryDepartment" parameterType="string" resultType="java.lang.String">
        SELECT GROUP_ID_ FROM os_group WHERE PATH_ LIKE CONCAT(CONCAT('%', #{deptId}), '%') AND PARENT_ID_ != '0'
    </select>

    <select id="queryEmployee" parameterType="string" resultType="HashMap">
        SELECT EMPLOYEE_NUMBER_,FULLNAME_ FROM os_user WHERE USER_ID_ IN (SELECT PARTY2_ FROM os_rel_inst WHERE PARTY1_ IN (#{deptId}) AND REL_TYPE_KEY_ = 'GROUP-USER-BELONG')
    </select>

</mapper>