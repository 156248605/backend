<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elex.oa.dao.dao_shiyun.IPostLogDao">

	<resultMap id="postLogMapper" type="PostLog">
		<id column="id" property="id" />
		<result column="postid" property="postid" />
		<result column="changeinformation" property="changeinformation" />
		<result column="beforeinformation" property="beforeinformation" />
		<result column="afterinformation" property="afterinformation" />
		<result column="changereason" property="changereason" />
		<result column="changedate" property="changedate" />
		<result column="transactoruserid" property="transactoruserid" />
	</resultMap>

	<select id="selectAllPostLog" resultMap="postLogMapper">
		select * from tb_post_log l
		JOIN tb_id_post p ON l.postid = p.id
		WHERE p.state=1
	</select>

	<insert id="insertOne" parameterType="PostLog" useGeneratedKeys="true" keyProperty="id">
		insert into tb_post_log
		(id,
		postid,
		changeinformation,
		beforeinformation,
		afterinformation,
		changereason,
		changedate,
		transactoruserid
		)
		VALUES
		(NULL ,
		#{postid},
		#{changeinformation},
		#{beforeinformation},
		#{afterinformation},
		#{changereason},
		#{changedate},
		#{transactoruserid})
	</insert>

	<select id="selectByConditions" parameterType="PostLog" resultMap="postLogMapper">
		SELECT
		plog.id,
		plog.postid,
		plog.changeinformation,
		plog.beforeinformation,
		plog.afterinformation,
		plog.changereason,
		plog.changedate,
		plog.transactoruserid
		FROM tb_post_log plog
		LEFT JOIN tb_id_post p ON plog.postid = p.id
		LEFT JOIN tb_id_user u ON plog.transactoruserid = u.id
		<where>
			<if test="changeinformation!=null and changeinformation!='' or changeinformations!=null">
				<if test="changeinformationvalue=='' and changeinformations.size!=0">
					AND plog.changeinformation IN
					<foreach collection="changeinformations" item="param" open="(" close=")" separator=",">
						#{param}
					</foreach>
				</if>
				<if test="changeinformationvalue=='包含'">
					AND plog.changeinformation LIKE CONCAT(CONCAT('%',#{changeinformation}),'%')
				</if>
				<if	test="changeinformationvalue=='不包含'">
					AND plog.changeinformation NOT LIKE CONCAT(CONCAT('%',#{changeinformation}),'%')
				</if>
			</if>
			<if test="postname!=null and postname!='' or postnames!=null">
				<if test="postnamevalue=='' and postnames.size!=0">
					AND p.postname IN
					<foreach collection="postnames" item="param" open="(" close=")" separator=",">
						#{param}
					</foreach>
				</if>
				<if test="postnamevalue=='包含'">
					AND p.postname LIKE CONCAT(CONCAT('%',#{postname}),'%')
				</if>
				<if	test="postnamevalue=='不包含'">
					AND p.postname NOT LIKE CONCAT('%',#{postname},'%')
				</if>
			</if>
			<if test="beforeinformation!=null and beforeinformation!='' or beforeinformations!=null">
				<if test="beforeinformationvalue=='' and beforeinformations.size">
					AND plog.beforeinformation IN
					<foreach collection="beforeinformations" item="param" open="(" close=")" separator=",">
						#{param}
					</foreach>
				</if>
				<if test="beforeinformationvalue=='包含'">
					AND plog.beforeinformation LIKE CONCAT(CONCAT('%',#{beforeinformation}),'%')
				</if>
				<if	test="beforeinformationvalue=='不包含'">
					AND plog.beforeinformation NOT LIKE CONCAT(CONCAT('%',#{beforeinformation}),'%')
				</if>
			</if>
			<if test="afterinformation!=null and afterinformation!='' or afterinformations!=null">
				<if test="afterinformationvalue=='' and afterinformations.size!=0">
					AND plog.afterinformation IN
					<foreach collection="afterinformations" item="param" open="(" close=")" separator=",">
						#{param}
					</foreach>
				</if>
				<if test="afterinformationvalue=='包含'">
					AND plog.afterinformation LIKE CONCAT(CONCAT('%',#{afterinformation}),'%')
				</if>
				<if	test="afterinformationvalue=='不包含'">
					AND plog.afterinformation NOT LIKE CONCAT(CONCAT('%',#{afterinformation}),'%')
				</if>
			</if>
			<if test="changereason!=null and changereason!='' or changereasons!=null">
				<if test="changereasonvalue=='' and changereasons.size!=0">
					AND plog.changereason IN
					<foreach collection="changereasons" item="param" open="(" close=")" separator=",">
						#{param}
					</foreach>
				</if>
				<if test="changereasonvalue=='包含'">
					AND plog.changereason LIKE CONCAT(CONCAT('%',#{changereason}),'%')
				</if>
				<if	test="changereasonvalue=='不包含'">
					AND plog.changereason NOT LIKE CONCAT(CONCAT('%',#{changereason}),'%')
				</if>
			</if>
			<if test="changedatevalue1!=null and changedatevalue1!='' and changedatevalue2!=null and changedatevalue2!=''">
				AND plog.changedate BETWEEN #{changedatevalue1} AND #{changedatevalue2}
			</if>
			<if test="transactortruename!=null and transactortruename!='' or transactortruenames!=null">
				<if test="transactortruenamevalue=='' and transactortruenames.size!=0">
					AND u.truename IN
					<foreach collection="transactortruenames" item="param" open="(" close=")" separator=",">
						#{param}
					</foreach>
				</if>
				<if test="transactortruenamevalue=='包含'">
					AND u.truename LIKE CONCAT(CONCAT('%',#{transactortruename}),'%')
				</if>
				<if	test="transactortruenamevalue=='不包含'">
					AND u.truename NOT LIKE CONCAT(CONCAT('%',#{transactortruename}),'%')
				</if>
			</if>
		</where>
		GROUP BY plog.id
	</select>

	<delete id="deleteOne" parameterType="java.lang.Integer" >
		DELETE FROM tb_post_log
		WHERE id=#{id}
	</delete>

</mapper>
