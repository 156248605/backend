<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elex.oa.dao.eqptDao.OutRepositoryMapper">
    <select id="findAll" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT * ,'' as author FROM eqpt_outrepository
        UNION
        SELECT * FROM eqpt_outrepository_draft WHERE author = #{author}
        ORDER BY outId DESC
    </select>

    <insert id="insertNew" parameterType="string">
        INSERT INTO eqpt_outrepository VALUES (NULL,#{arg0},#{arg1},#{arg2},#{arg3},#{arg4},#{arg5},#{arg6},#{arg7},#{arg8},#{arg9},#{arg10},#{arg11},#{arg12},#{arg13},#{arg14},#{arg15},#{arg16},#{arg17},#{arg18},#{arg19},#{arg20},#{arg21})
    </insert>

    <select id="searchId" resultType="string">
        SELECT id FROM eqpt_material WHERE sn = #{sn} AND bn = #{bn} AND id = #{id}
    </select>

    <select id="showOUTID" resultType="java.lang.String">
        SELECT outId FROM eqpt_outrepository WHERE outId LIKE CONCAT(CONCAT('%',#{outId},'%'))
    </select>

    <delete id="delete" parameterType="com.elex.oa.entity.eqpt.Repository">
        DELETE FROM eqpt_outrepository WHERE onlyIdOut = #{onlyIdOut}
    </delete>

    <update id="updateInstId" parameterType="com.elex.oa.entity.eqpt.Repository">
        UPDATE eqpt_outrepository SET INST_ID_ = #{instid} WHERE INST_ID_ = ''
    </update>

    <update id="updateApprove" parameterType="com.elex.oa.entity.eqpt.Repository">
        UPDATE eqpt_outrepository
        <set>
            <if test="arg1 != null and arg1 != ''">
                secondOne = #{arg1},
            </if>
            <if test="arg2 != null and arg2 != ''">
                thirdOne = #{arg2},
            </if>
            <if test="arg3 != null and arg3 != ''">
                fourthOne = #{arg3},
            </if>
        </set>
        WHERE INST_ID_ = #{arg0}
    </update>

    <select id="wdbhR" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT DISTINCT F_WDBH AS outId FROM w_liysqd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
        UNION
        SELECT DISTINCT F_WDBH AS outId FROM w_zdsqd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
    </select>

    <select id="wdbhX" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT DISTINCT F_WDBH AS outId FROM w_xsfhtzd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
    </select>

    <select id="wdbhC" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT DISTINCT wdbh AS outId FROM w_xsfhtzd
    </select>

    <select id="showmatR" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT w_lylymx.F_WLBM AS materialId,w_lylymx.F_WLMC AS materialName,w_lylymx.F_GGXH AS spec,w_lylymx.F_LYSL AS outNum,w_jy.F_XLH AS sn,(eqpt_material.unit) AS unit,eqpt_material.remark AS remark FROM eqpt_material,w_lylymx,w_jy WHERE w_lylymx.REF_ID_ = (SELECT DISTINCT ID_ FROM w_lysq WHERE F_WDBH = #{wdbh} ORDER BY ID_ DESC LIMIT 1) AND eqpt_material.id = w_lylymx.F_WLBM AND w_jy.F_WLBM = eqpt_material.id
        UNION
        SELECT w_lylymx.F_WLBM AS materialId,w_lylymx.F_WLMC AS materialName,w_lylymx.F_GGXH AS spec,w_lylymx.F_LYSL AS outNum,'' AS sn,(eqpt_material.unit) AS unit,eqpt_material.remark AS remark FROM eqpt_material,w_lylymx,w_jy WHERE w_lylymx.REF_ID_ = (SELECT DISTINCT ID_ FROM w_lysq WHERE F_WDBH = #{wdbh} ORDER BY ID_ DESC LIMIT 1) AND eqpt_material.id = w_lylymx.F_WLBM AND eqpt_material.id = ANY(SELECT id FROM eqpt_material WHERE eqpt_material.id not in (SELECT F_WLBM FROM w_jy))
        UNION
        SELECT w_zdsqlymx.F_WLBM AS materialId,w_zdsqlymx.F_WLMC AS materialName,w_zdsqlymx.F_GGXH AS spec,w_zdsqlymx.F_LYSL AS outNum,w_jy.F_XLH AS sn,(eqpt_material.unit) AS unit,eqpt_material.remark AS remark FROM eqpt_material,w_zdsqlymx,w_jy WHERE w_zdsqlymx.REF_ID_ = (SELECT DISTINCT ID_ FROM w_zdsqd12 WHERE F_WDBH = #{wdbh} ORDER BY ID_ DESC LIMIT 1) AND eqpt_material.id = w_zdsqlymx.F_WLBM AND w_jy.F_WLBM = eqpt_material.id
        UNION
        SELECT w_zdsqlymx.F_WLBM AS materialId,w_zdsqlymx.F_WLMC AS materialName,w_zdsqlymx.F_GGXH AS spec,w_zdsqlymx.F_LYSL AS outNum,'' AS sn,(eqpt_material.unit) AS unit,eqpt_material.remark AS remark FROM eqpt_material,w_zdsqlymx,w_jy WHERE w_zdsqlymx.REF_ID_ = (SELECT DISTINCT ID_ FROM w_zdsqd12 WHERE F_WDBH = #{wdbh} ORDER BY ID_ DESC LIMIT 1) AND eqpt_material.id = w_zdsqlymx.F_WLBM AND eqpt_material.id = ANY(SELECT id FROM eqpt_material WHERE eqpt_material.id not in (SELECT F_WLBM FROM w_jy))
        ORDER BY materialId
    </select>

    <select id="showmatX" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT w_cpmx.F_WLBM AS materialId,w_cpmx.F_WLMC AS materialName,w_cpmx.F_GGXH AS spec,w_cpmx.F_XQSL AS outNum,w_jy.F_XLH AS sn,(eqpt_material.unit) AS unit,eqpt_material.remark AS remark FROM eqpt_material,w_cpmx,w_jy WHERE w_cpmx.REF_ID_ = (SELECT DISTINCT ID_ FROM w_xsfhtzd WHERE F_WDBH = #{wdbh} ORDER BY ID_ DESC LIMIT 1) AND eqpt_material.id = w_cpmx.F_WLBM AND w_jy.F_WLBM = eqpt_material.id
        UNION
        SELECT w_cpmx.F_WLBM AS materialId,w_cpmx.F_WLMC AS materialName,w_cpmx.F_GGXH AS spec,w_cpmx.F_XQSL AS outNum,'' AS sn,(eqpt_material.unit) AS unit,eqpt_material.remark AS remark FROM eqpt_material,w_cpmx,w_jy WHERE w_cpmx.REF_ID_ = (SELECT DISTINCT ID_ FROM w_xsfhtzd WHERE F_WDBH = #{wdbh} ORDER BY ID_ DESC LIMIT 1) AND eqpt_material.id = w_cpmx.F_WLBM AND eqpt_material.id = ANY(SELECT id FROM eqpt_material WHERE eqpt_material.id not in (SELECT F_WLBM FROM w_jy))
        ORDER BY materialId
    </select>

    <select id="showmatC" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT w_xsfhtzd.wlbh AS materialId,w_xsfhtzd.wlmc AS materialName,w_xsfhtzd.ggxh AS spec,w_xsfhtzd.xqsl AS outNum,w_xsfhtzd.pch_xlh AS sn,(eqpt_material.unit) AS unit,eqpt_material.remark AS remark FROM eqpt_material,w_xsfhtzd WHERE REF_ID_ = (SELECT DISTINCT ID_ FROM w_xsfhtzd WHERE F_WDBH = #{wdbh}) AND eqpt_material.id = w_xsfhtzd.wlbh
    </select>

    <select id="showmatSN" resultType="string">
        SELECT DISTINCT F_XLH FROM w_jy WHERE F_WLBM = #{materialId}
    </select>

    <select id="showprojX" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT w_xsfhtzd.F_XMBH AS projId,w_xsfhtzd.F_XMMC AS projName FROM w_xsfhtzd WHERE F_WDBH = #{wdbh}
    </select>

    <select id="showprojR" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT w_zdsqd.F_XMBH AS projId,w_zdsqd.F_XMMC AS projName FROM w_zdsqd WHERE F_WDBH = #{wdbh}
        UNION
        SELECT w_liysqd.F_XMBH AS projId,w_liysqd.F_XMMC AS projName FROM w_liysqd WHERE F_WDBH = #{wdbh}
    </select>

    <select id="getInId" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT * FROM eqpt_outrepository WHERE INST_ID_ = #{instId}
    </select>

    <select id="node" resultType="string">
        SELECT TASK_DEF_KEY_ FROM act_ru_task WHERE PROC_INST_ID_ = #{taskid}
    </select>

    <select id="approveName" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT * FROM eqpt_outrepository WHERE INST_ID_ = #{instId} ORDER BY outId DESC LIMIT 1
    </select>

    <select id="checkDraft" resultType="string">
        SELECT author FROM eqpt_outrepository_draft WHERE materialId = #{materialId} AND outId = #{outId}
    </select>

    <select id="getDraft" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT * FROM eqpt_outrepository_draft WHERE outId LIKE CONCAT(CONCAT('%',#{outId},'%'))
    </select>

    <delete id="deleteDraft" parameterType="com.elex.oa.entity.eqpt.Repository">
        DELETE FROM eqpt_outrepository_draft WHERE outId LIKE CONCAT(CONCAT('%',#{outId},'%'))
    </delete>

    <select id="findDraft" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT * FROM eqpt_outrepository_draft ORDER BY outId DESC
    </select>

    <insert id="insertDraft" parameterType="string">
        INSERT INTO eqpt_outrepository_draft VALUES (NULL,#{arg0},#{arg1},#{arg2},#{arg3},#{arg4},#{arg5},#{arg6},#{arg7},#{arg8},#{arg9},#{arg10},#{arg11},#{arg12},#{arg13},#{arg14},#{arg15},#{arg16},#{arg17},#{arg18},#{arg19},#{arg20},#{arg21},#{arg22})
    </insert>

    <select id="getNoticeR" resultType="HashMap">
        SELECT '领用申请单' AS F_BDMC, F_WDBH, F_SQR_NAME, F_TXRQ, F_XMBH, F_XMMC FROM w_liysqd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
        UNION
        SELECT '业务招待申请单' AS F_BDMC, F_WDBH, F_SQR_NAME, F_TXRQ, F_XMBH, F_XMMC FROM w_zdsqd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
    </select>

    <select id="getNoticeX" resultType="HashMap">
        SELECT '销售发货通知单' AS F_BDMC, F_WDBH, F_SQR_NAME, F_TXRQ, F_XMBH, F_XMMC FROM w_xsfhtzd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
    </select>

    <select id="noticeChild" resultType="HashMap">
        SELECT F_WLBM AS id, F_WLMC AS name, F_GGXH AS spec, F_XQSL AS num, '' AS price, '' AS sum FROM w_cpmx,w_xsfhtzd WHERE w_cpmx.REF_ID_ = (SELECT ID_ FROM w_xsfhtzd WHERE F_WDBH = #{wdbh}) AND w_xsfhtzd.INST_STATUS_ = 'SUCCESS_END'
        UNION
        SELECT F_WLBM AS id, F_WLMC AS name, F_GGXH AS spec, F_XQSL AS num, '' AS price, '' AS sum FROM w_lylymx,w_liysqd WHERE w_lylymx.REF_ID_ = (SELECT ID_ FROM w_liysqd WHERE F_WDBH = #{wdbh}) AND w_liysqd.INST_STATUS_ = 'SUCCESS_END'
        UNION
        SELECT F_WLBM AS id, F_WLMC AS name, F_GGXH AS spec, F_XSSL AS num, F_XSDJ AS price, F_XSJE AS sum FROM w_zdsqlymx,w_zdsqd WHERE w_zdsqlymx.REF_ID_ = (SELECT ID_ FROM w_zdsqd WHERE F_WDBH = #{wdbh}) AND w_zdsqd.INST_STATUS_ = 'SUCCESS_END'
    </select>

    <select id="allNoticeR" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT DISTINCT '领用申请单' AS firstOne, F_WDBH AS secondOne, F_SQR_NAME AS thirdOne, F_TXRQ AS fourthOne, F_XMBH AS bn, F_XMMC AS sn FROM w_liysqd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
        UNION
        SELECT DISTINCT '业务招待申请单' AS firstOne, F_WDBH AS secondOne, F_SQR_NAME AS thirdOne, F_TXRQ AS fourthOne, F_XMBH AS bn, F_XMMC AS sn FROM w_zdsqd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
    </select>

    <select id="allNoticeX" resultType="com.elex.oa.entity.eqpt.Repository">
        SELECT '销售发货通知单' AS firstOne, F_WDBH AS secondOne, F_SQR_NAME AS thirdOne, F_TXRQ AS fourthOne, F_XMBH AS bn, F_XMMC AS sn FROM w_xsfhtzd WHERE F_WDBH NOT IN (SELECT outInfo FROM eqpt_outrepository) AND INST_STATUS_ = 'SUCCESS_END'
    </select>

    <select id="priceOfId" resultType="string">
        SELECT price FROM eqpt_material WHERE id = #{id}
    </select>
</mapper>
