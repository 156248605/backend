<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elex.oa.dao.hr.IPersonalInformationDao">

	<resultMap id="PersonalInformationResultMap" type="PersonalInformation">
		<id column="id" property="id" />
		<result column="userid" property="userid" />
		<result column="employeenumber" property="employeenumber" />
		<result column="depid" property="depid" />
		<result column="sex" property="sex" />
		<result column="telphoneid" property="telphoneid" />
		<result column="mobilephone" property="mobilephone" />
		<result column="baseinformationid" property="baseinformationid" />
		<result column="manageinformationid" property="manageinformationid" />
		<result column="costinformationid" property="costinformationid" />
		<result column="otherinformationid" property="otherinformationid" />
	</resultMap>

	<select id="selectAllmobilephones" resultType="java.lang.String">
		select distinct mobilephone from tb_id_personalinformation
	</select>
	<select id="selectAllenglishnames" resultType="java.lang.String">
		select distinct englishname from tb_id_baseinformation where englishname is not  null
	</select>
	<select id="selectAllidcodes" resultType="java.lang.String">
		select distinct idcode from tb_id_baseinformation
	</select>
	<select id="selectAllages" resultType="java.lang.String">
		SELECT
			distinct TIMESTAMPDIFF(YEAR, birthday, CURDATE()) AS 'age'
		FROM
			tb_id_baseinformation
		where
			 birthday is not null
	</select>
	<select id="selectAllworkingages" resultType="java.lang.String">
		SELECT
			DISTINCT TIMESTAMPDIFF(YEAR, firstworkingtime, CURDATE()) AS 'workingage'
		FROM
			tb_id_baseinformation
		WHERE
			firstworkingtime is NOT NULL
	</select>
	<select id="selectUseridTruenameDepidDepnamePerid" resultType="java.util.Map">
		SELECT u.id AS userid,u.truename,dep.id AS depid,dep.depname,per.id AS perid, u.employeenumber AS employeenumber
		FROM tb_id_user u
		LEFT JOIN tb_id_personalinformation per ON per.userid=u.id
		LEFT JOIN tb_id_department dep ON dep.id=per.depid
		ORDER BY
			CONVERT (u.truename USING gbk) ASC
	</select>
	<select id="selectPostidPostname" parameterType="java.lang.Integer" resultType="java.util.Map">
		SELECT post.id,post.postname AS name
		FROM tb_id_personalinformation per
		LEFT JOIN tb_hr_per_and_post_rs rs ON rs.perid = per.id
		LEFT JOIN tb_id_post post ON post.id = rs.postid
		WHERE per.id = #{perid}
	</select>

	<select id="selectByConditions" parameterType="PersonalInformation" resultMap="PersonalInformationResultMap">
		SELECT
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		FROM
			tb_id_personalinformation per
		LEFT JOIN tb_id_baseinformation b ON per.baseinformationid = b.id
		LEFT JOIN tb_id_user u ON per.userid = u.id
		LEFT JOIN tb_id_department d ON per.depid = d.id
		LEFT JOIN tb_hr_per_and_post_rs r ON per.id = r.perid
		LEFT JOIN tb_hr_set t ON per.telphoneid = t.id
		<where>
			<if test="isactive!=null and isactive!='' or isactive==0">
				u.isactive=#{isactive}
			</if>
			<if test="username!=null and username!='' or usernames!=null">
				<if test="usernamevalue=='' and usernames.size!=0">
					AND u.username IN
					<foreach collection="usernames" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="usernamevalue=='包含'">
					AND u.username LIKE CONCAT(CONCAT('%', #{username}), '%')
				</if>
				<if test="usernamevalue=='不包含'">
					AND u.username NOT LIKE CONCAT(CONCAT('%', #{username}), '%')
				</if>
			</if>
			<if test="truename!=null and truename!='' or truenames!=null">
				<if test="truenamevalue=='' and truenames.size!=0">
					AND u.truename IN
					<foreach collection="truenames" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="truenamevalue=='包含'">
					AND u.truename LIKE CONCAT(CONCAT('%', #{truename}), '%')
				</if>
				<if test="truenamevalue=='不包含'">
					AND u.truename NOT LIKE CONCAT(CONCAT('%', #{truename}), '%')
				</if>
			</if>
			<if test="employeenumber!=null and employeenumber!='' or employeenumbers!=null">
				<if test="employeenumbervalue=='' and employeenumbers.size!=0">
					AND per.employeenumber IN
					<foreach collection="employeenumbers" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="employeenumbervalue=='包含'">
					AND per.employeenumber LIKE CONCAT(CONCAT('%', #{employeenumber}), '%')
				</if>
				<if test="employeenumbervalue=='不包含'">
					AND per.employeenumber NOT LIKE CONCAT(CONCAT('%', #{employeenumber}), '%')
				</if>
			</if>
			<if test="baseinformationids!=null">
				AND per.baseinformationid IN
				<foreach collection="baseinformationids" item="param"  open="(" close=")" separator=",">
					#{param}
				</foreach>
			</if>
			<if test="sex!=null and sex!=''">
				AND per.sex=#{sex}
			</if>
			<if test="depname!=null and depname!='' or depnames!=null">
				<if test="depnamevalue=='' and depnames.size!=0">
					AND d.depname IN
					<foreach collection="depnames" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="depnamevalue=='包含'">
					AND d.depname LIKE CONCAT(CONCAT('%', #{depname}), '%')
				</if>
				<if test="depnamevalue=='不包含'">
					AND d.depname NOT LIKE CONCAT(CONCAT('%', #{depname}), '%')
				</if>
			</if>
			<if test="perids!=null">
				AND per.id IN
				<foreach collection="perids" item="param"  open="(" close=")" separator=",">
					#{param}
				</foreach>
			</if>
			<if test="telphone!=null and telphone!='' or telphones!=null">
				<if test="telphonevalue=='' and telphones.size!=0">
					AND t.telphone IN
					<foreach collection="telphones" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="telphonevalue=='包含'">
					AND t.telphone LIKE CONCAT(CONCAT('%', #{telphone}), '%')
				</if>
				<if test="telphonevalue=='不包含'">
					AND t.telphone NOT LIKE CONCAT(CONCAT('%', #{telphone}), '%')
				</if>
			</if>
			<if test="mobilephone!=null and mobilephone!='' or mobilephones!=null">
				<if test="mobilephonevalue=='' and mobilephones.size!=0">
					AND per.mobilephone IN
					<foreach collection="mobilephones" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="mobilephonevalue=='包含'">
					AND per.mobilephone LIKE CONCAT(CONCAT('%', #{mobilephone}), '%')
				</if>
				<if test="mobilephonevalue=='不包含'">
					AND per.mobilephone NOT LIKE CONCAT(CONCAT('%', #{mobilephone}), '%')
				</if>
			</if>
			<if test="depid!='' and depid!=null">
				AND per.depid = #{depid}
			</if>
			and u.state = 1
		</where>
		GROUP BY per.id DESC
	</select>

	<select id="selectByConditions2" parameterType="DimissionInformation" resultMap="PersonalInformationResultMap">
		SELECT
			per.userid
		FROM
			tb_id_personalinformation per
		LEFT JOIN tb_id_user u ON per.userid = u.id
		LEFT JOIN tb_id_department d ON per.depid = d.id
		LEFT JOIN tb_hr_per_and_post_rs r ON per.id = r.perid
		<where>
			<if test="dimissiontruename!=null and dimissiontruename!='' or dimissiontruenames!=null">
				<if test="dimissiontruenamevalue=='' and dimissiontruenames.size!=0">
					AND u.truename IN
					<foreach collection="dimissiontruenames" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="dimissiontruenamevalue=='包含'">
					AND u.truename LIKE CONCAT('%',#{dimissiontruename},'%')
				</if>
				<if test="dimissiontruenamevalue=='不包含'">
					AND u.truename NOT LIKE CONCAT('%',#{dimissiontruename},'%')
				</if>
			</if>
			<if test="employeenumber!=null and employeenumber!='' or employeenumbers!=null">
				<if test="employeenumbervalue=='' and employeenumbers.size!=0">
					AND per.employeenumber IN
					<foreach collection="employeenumbers" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="employeenumbervalue=='包含'">
					AND per.employeenumber LIKE CONCAT(CONCAT('%', #{employeenumber}), '%')
				</if>
				<if test="employeenumbervalue=='不包含'">
					AND per.employeenumber NOT LIKE CONCAT(CONCAT('%', #{employeenumber}), '%')
				</if>
			</if>
			<if test="depname!=null and depname!='' or depnames!=null">
				<if test="depnamevalue=='' and depnames.size!=0">
					AND d.depname IN
					<foreach collection="depnames" item="param" open="(" separator="," close=")">
						#{param}
					</foreach>
				</if>
				<if test="depnamevalue=='包含'">
					AND d.depname LIKE CONCAT(CONCAT('%', #{depname}), '%')
				</if>
				<if test="depnamevalue=='不包含'">
					AND d.depname NOT LIKE CONCAT(CONCAT('%', #{depname}), '%')
				</if>
			</if>
			<if test="perids!=null">
				AND per.id IN
				<foreach collection="perids" item="param"  open="(" close=")" separator=",">
					#{param}
				</foreach>
			</if>
		</where>
		GROUP BY per.id DESC
	</select>

	<select id="selectById" parameterType="java.lang.Integer" resultMap="PersonalInformationResultMap">
		SELECT
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		FROM
			tb_id_personalinformation per
			JOIN tb_id_user u ON per.userid = u.id
		WHERE
			per.id=#{id} and u.state = 1
	</select>

	<select id="selectById2" parameterType="java.lang.Integer" resultMap="PersonalInformationResultMap">
		SELECT
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		FROM
			tb_id_personalinformation per
			JOIN tb_id_user u ON per.userid = u.id
		WHERE
			per.id=#{id}
	</select>

	<select id="selectByEmployeenumber" parameterType="java.lang.String" resultMap="PersonalInformationResultMap">
		SELECT
			*
		FROM
			tb_id_personalinformation
		WHERE
			employeenumber=#{employeenumber}
	</select>

	<select id="selectByUserid" parameterType="java.lang.Integer" resultMap="PersonalInformationResultMap">
		SELECT
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		FROM
			tb_id_personalinformation per
			JOIN tb_id_user u ON per.userid = u.id
		WHERE
			userid=#{userid}
	</select>

	<select id="selectByDepid" parameterType="java.lang.Integer" resultMap="PersonalInformationResultMap">
		SELECT
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		FROM
			tb_id_personalinformation per
			JOIN tb_id_user u ON per.userid = u.id
		WHERE
			per.depid=#{depid} and u.state=1
	</select>

	<select id="selectByDepid2" resultMap="PersonalInformationResultMap">
		SELECT
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		FROM
			tb_id_personalinformation per
			JOIN tb_id_user u ON per.userid = u.id
			JOIN tb_id_manageinformation m ON per.manageinformationid = m.id
		<where>
			per.depid=#{depid}
			<if test="sdate!=null and sdate!=''"> AND m.entrydate BETWEEN #{sdate} AND #{edate}</if>
			<if test="sdate==null or sdate==''">AND m.entrydate <![CDATA[<=]]> #{edate}</if>
		</where>
	</select>

	<select id="selectByDepid3" resultMap="PersonalInformationResultMap">
		SELECT
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		FROM
			tb_id_personalinformation per
			JOIN tb_hr_dimission d ON per.userid = d.dimissionuserid
		<where>
			per.depid=#{depid}
			<if test="sdate!=null and sdate!=''"> AND d.lastworkingdate <![CDATA[>]]> #{sdate} AND d.lastworkingdate <![CDATA[<]]> #{edate}</if>
			<if test="sdate==null or sdate==''">AND d.lastworkingdate <![CDATA[<]]> #{edate}</if>
		</where>
	</select>

	<select id="selectAll" resultMap="PersonalInformationResultMap">
		select
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		from
			 tb_id_personalinformation per
			 JOIN tb_id_user u ON per.userid = u.id
		WHERE
			u.state = 1 or u.state=0
		ORDER BY per.id DESC
	</select>

	<select id="selectAll2" resultMap="PersonalInformationResultMap">
		select
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		from
			 tb_id_personalinformation per
			 JOIN tb_id_user u ON per.userid = u.id
			 JOIN tb_id_manageinformation m ON per.manageinformationid = m.id
		<where>
			<if test="sdate!=null and sdate!=''">m.entrydate BETWEEN #{sdate} AND #{edate}</if>
			<if test="sdate==null or sdate==''">m.entrydate <![CDATA[<=]]> #{edate}</if>
		</where>
		ORDER BY per.id DESC
	</select>

	<select id="selectAll3" resultMap="PersonalInformationResultMap">
		select
			per.id,
			per.userid,
			per.employeenumber,
			per.depid,
			per.sex,
			per.telphoneid,
			per.mobilephone,
		    per.baseinformationid,
		    per.manageinformationid,
			per.costinformationid,
			per.otherinformationid
		from
			 tb_id_personalinformation per
			 JOIN tb_hr_dimission d ON per.userid = d.dimissionuserid
		<where>
			<if test="sdate!=null and sdate!=''">AND d.lastworkingdate <![CDATA[>]]> #{sdate} AND d.lastworkingdate <![CDATA[<]]> #{edate}</if>
			<if test="sdate==null or sdate==''">AND d.lastworkingdate <![CDATA[<]]> #{edate}</if>
		</where>
		ORDER BY per.id DESC
	</select>

	<select id="selectUseridTruenameDepnameByDepid" parameterType="java.lang.Integer" resultType="java.util.Map">
		SELECT dep.depname AS depname,u.truename AS truename,u.id AS userid
		FROM tb_id_user u
		JOIN tb_id_personalinformation per ON per.userid=u.id
		JOIN tb_id_department dep ON dep.id=per.depid
		WHERE dep.id = #{depid}
	</select>

	<select id="queryPersonalInformationsByNull" resultType="com.elex.oa.entity.hr_entity.personalinformation.PersonalInformationExchange">
		SELECT
			u.employeenumber AS employeenumber,
			u.username AS username,
			u.truename AS truename,
			(
				CASE
				WHEN u.isactive = 1 THEN
					"激活"
				ELSE
					"未激活"
				END
			) AS isactive,
			(
				CASE
				WHEN u.state = 1 THEN
					"在职"
				ELSE
					"离职"
				END
			) AS isatwork,
			IFNULL(dim.lastworkingdate, "") AS lastworkingdate,
			IFNULL(dimissiontype.datavalue, "") AS dimissiontype,
			IFNULL(dimissiondirection.datavalue,"") AS dimissiondirection,
			IFNULL(dimissionreason.datavalue,"") AS dimissionreason,
			IFNULL(transactoruser.employeenumber,"") AS dimission_transactoremployeenumber,
			IFNULL(transactoruser.truename,"") AS dimission_transactortruename,
			IFNULL(dim.transactiondate, "") AS dimission_transactiondate,
			IFNULL(dep.depcode, "") AS depcode,
			IFNULL(dep.depname, "") AS depname,
			IFNULL(postinfo.postlist, "") AS postlist,
			IFNULL(base.userphoto, "") AS userphoto,
			IFNULL(base.idphoto1, "") AS idphoto1,
			IFNULL(base.idphoto2, "") AS idphoto2,
			IFNULL(base.englishname, "") AS englishname,
			IFNULL(base.idcode, "") AS idcode,
			IFNULL(base.sex, "") AS sex,
			IFNULL(base.birthday, "") AS birthday,
			IFNULL(base.constellation, "") AS constellation,
			IFNULL(base.chinesecs, "") AS chinesecs,
			IFNULL(race.datavalue, "") AS race,
			IFNULL(base.marriage, "") AS marriage,
			IFNULL(children.datavalue, "") AS children,
			IFNULL(zzmm.datavalue, "") AS zzmm,
			IFNULL(zgxl.datavalue, "") AS zgxl,
			IFNULL(byyx.datavalue, "") AS byyx,
			IFNULL(sxzy.datavalue, "") AS sxzy,
			IFNULL(pyfs.datavalue, "") AS pyfs,
			IFNULL(firstla.datavalue, "") AS firstla,
			IFNULL(elsela.datavalue, "") AS elsela,
			IFNULL(posttitle.datavalue, "") AS posttitle,
			IFNULL(zyzstype.datavalue, "") AS zyzstype,
			IFNULL(zyzsname.datavalue, "") AS zyzsname,
			IFNULL(parentcompany.datavalue, "") AS parentcompany,
			IFNULL(base.firstworkingtime, "") AS firstworkingtime,
			IFNULL(base.household_register, "") AS household_register,
			IFNULL(postrank.datavalue, "") AS postrank,
			IFNULL(employeetype.datavalue, "") AS employeetype,
			IFNULL(manage.entrydate, "") AS entrydate,
			IFNULL(manage.zhuanzhengdate, "") AS zhuanzhengdate,
			IFNULL(salarystandard.datavalue, "") AS salarystandard,
			IFNULL(ssb.datavalue, "") AS ssb,
			IFNULL(ssbgscd.datavalue, "") AS ssbgscd,
			IFNULL(ssbgrcd.datavalue, "") AS ssbgrcd,
			IFNULL(gjj.datavalue, "") AS gjj,
			IFNULL(gjjgscd.datavalue, "") AS gjjgscd,
			IFNULL(gjjgscd.datavalue, "") AS gjjgrcd,
			IFNULL(khh.datavalue, "") AS khh,
			IFNULL(sbjnd.datavalue, "") AS sbjnd,
			IFNULL(cost.salaryaccount, "") AS salaryaccount,
			IFNULL(cost.sbcode, "") AS sbcode,
			IFNULL(cost.gjjcode, "") AS gjjcode,
			IFNULL(other.privateemail, "") AS privateemail,
			IFNULL(other.companyemail, "") AS companyemail,
			IFNULL(other.emergencycontract, "") AS emergencycontract,
			IFNULL(emergencyrp.datavalue, "") AS emergencyrp,
			IFNULL(other.emergencyphone, "") AS emergencyphone,
			IFNULL(other.address, "") AS address,
			IFNULL(other.mobilephone, "") AS mobilephone,
			IFNULL(telphone.datavalue, "") AS telphone,
			IFNULL(other.remark, "") AS remark,
			IFNULL(contractinfo.contractlist, "") AS contractlist

		FROM
			tb_id_user u
		LEFT JOIN tb_hr_dimission dim ON dim.dimissionuserid = u.id
		LEFT JOIN tb_hr_set dimissiontype ON dimissiontype.id = dim.dimissiontypeid
		LEFT JOIN tb_hr_set dimissiondirection ON dimissiondirection.id = dim.dimissiondirectionid
		LEFT JOIN tb_hr_set dimissionreason ON dimissionreason.id = dim.dimissionreasonid
		LEFT JOIN tb_id_user transactoruser ON transactoruser.id = dim.transactoruserid
		LEFT JOIN tb_id_personalinformation per ON per.userid = u.id
		LEFT JOIN tb_id_department dep ON dep.id = per.depid
		LEFT JOIN (
			SELECT
				rs.perid AS perid,
				GROUP_CONCAT(
					CONCAT_WS(
						'-',
						post.postname,
						post.postcode
					) SEPARATOR ';'
				) AS postlist
			FROM
				tb_id_personalinformation per
			JOIN tb_hr_per_and_post_rs rs ON rs.perid = per.id
			JOIN tb_id_post post ON post.id = rs.postid
			GROUP BY
					rs.perid
		) postinfo ON postinfo.perid = per.id
		LEFT JOIN tb_id_baseinformation base ON base.id = per.baseinformationid
		LEFT JOIN tb_hr_set race ON race.id = base.raceid
		LEFT JOIN tb_hr_set children ON children.id=base.childrenid
		LEFT JOIN tb_hr_set zzmm ON zzmm.id=base.zzmmid
		LEFT JOIN tb_hr_set zgxl ON zgxl.id=base.zgxlid
		LEFT JOIN tb_hr_set byyx ON byyx.id=base.byyxid
		LEFT JOIN tb_hr_set sxzy ON sxzy.id=base.sxzyid
		LEFT JOIN tb_hr_set pyfs ON pyfs.id=base.pyfsid
		LEFT JOIN tb_hr_set firstla ON firstla.id=base.firstlaid
		LEFT JOIN tb_hr_set elsela ON elsela.id=base.elselaid
		LEFT JOIN tb_hr_set posttitle ON posttitle.id=base.posttitleid
		LEFT JOIN tb_hr_set zyzstype ON zyzstype.id=base.zyzstypeid
		LEFT JOIN tb_hr_set zyzsname ON zyzsname.id=base.zyzsnameid
		LEFT JOIN tb_hr_set parentcompany ON parentcompany.id=base.parentcompanyid
		LEFT JOIN tb_id_manageinformation manage ON manage.id=per.manageinformationid
		LEFT JOIN tb_hr_set postrank ON postrank.id=manage.postrankid
		LEFT JOIN tb_hr_set employeetype ON employeetype.id=manage.employeetypeid
		LEFT JOIN tb_id_costinformation cost ON cost.id=per.costinformationid
		LEFT JOIN tb_hr_set salarystandard ON salarystandard.id=cost.salarystandardid
		LEFT JOIN tb_hr_set ssb ON ssb.id=cost.ssbid
		LEFT JOIN tb_hr_set ssbgscd ON ssbgscd.id=cost.ssbgscdid
		LEFT JOIN tb_hr_set ssbgrcd ON ssbgrcd.id=cost.ssbgrcdid
		LEFT JOIN tb_hr_set gjj ON gjj.id=cost.gjjid
		LEFT JOIN tb_hr_set gjjgscd ON gjjgscd.id=cost.gjjgscdid
		LEFT JOIN tb_hr_set gjjgrcd ON gjjgrcd.id=cost.gjjgrcdid
		LEFT JOIN tb_hr_set khh ON khh.id=cost.khhid
		LEFT JOIN tb_hr_set sbjnd ON sbjnd.id=cost.sbjndid
		LEFT JOIN tb_id_otherinformation other ON other.id=per.otherinformationid
		LEFT JOIN tb_hr_set emergencyrp ON emergencyrp.id=other.emergencyrpid
		LEFT JOIN tb_hr_set telphone ON telphone.id=other.telphoneid
		LEFT JOIN (
			SELECT
				contract.userid AS userid,
				GROUP_CONCAT(
					CONCAT_WS(
						'--',
						contract.contractcode,
						contract.startdate,
						contract.enddate,
						contracttype.datavalue,
						contract.attachment,
						contract.remark,
						contracttransactoruser.employeenumber,
						contract.transdate --
					) SEPARATOR ';'
				) AS contractlist
			FROM
				tb_hr_contractinformation contract
			LEFT JOIN tb_hr_set contracttype ON contracttype.id = contract.contracttypeid
			LEFT JOIN tb_id_user contracttransactoruser ON contracttransactoruser.id = contract.transactoruserid
			GROUP BY
				contract.userid
		) contractinfo ON contractinfo.userid = u.id
		where u.state=1
		ORDER BY
			u.employeenumber ASC
	</select>

	<insert id="insertOne" parameterType="PersonalInformation" useGeneratedKeys="true" keyProperty="id">
		insert into tb_id_personalinformation (
			id,
			userid,
			employeenumber,
			depid,
			sex,
			telphoneid,
			mobilephone,
			baseinformationid,
			manageinformationid,
			costinformationid,
			otherinformationid)
		values (
			NULL ,
			#{userid},
			#{employeenumber},
			#{depid},
			#{sex},
			#{telphoneid},
			#{mobilephone},
			#{baseinformationid},
			#{manageinformationid},
			#{costinformationid},
			#{otherinformationid})
	</insert>

	<update id="updateOne" parameterType="PersonalInformation" >
		update tb_id_personalinformation
		<set>
			<if test="employeenumber!=null and employeenumber!=''">
				employeenumber=#{employeenumber},
			</if>
			<if test="depid!=null and depid!=''">
				depid=#{depid},
			</if>
			<if test="sex!=null and sex!=''">
				sex=#{sex},
			</if>
			<if test="telphoneid!=null and telphoneid!=''">
				telphoneid=#{telphoneid},
			</if>
			<if test="mobilephone!=null and mobilephone!=''">
				mobilephone=#{mobilephone},
			</if>
			<if test="baseinformationid!=null and baseinformationid!=''">
				baseinformationid=#{baseinformationid},
			</if>
			<if test="manageinformationid!=null and manageinformationid!=''">
				manageinformationid=#{manageinformationid},
			</if>
			<if test="costinformationid!=null and costinformationid!=''">
				costinformationid=#{costinformationid},
			</if>
			<if test="otherinformationid!=null and otherinformationid!=''">
				otherinformationid=#{otherinformationid}
			</if>
		</set>
		WHERE id=#{id}
	</update>

	<update id="updateDeptinformation" parameterType="PersonalInformation">
		update tb_id_personalinformation
		<set>
			<if test="depid!=null and depid!=''">
				depid=NULL
			</if>
		</set>
		WHERE id=#{id}
	</update>

	<delete id="deleteById" parameterType="java.lang.Integer">
		DELETE FROM tb_id_personalinformation
		WHERE id=#{id}
	</delete>

	<delete id="deleteAll" parameterType="java.lang.Integer">
		DELETE FROM tb_id_personalinformation
	</delete>

</mapper>
