<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elex.oa.dao.hr.IPostDao">

	<resultMap id="postMapper" type="Post">
		<id column="id" property="id" />
		<result column="postname" property="postname" />
		<result column="functionaltypeid" property="functionaltypeid" />
		<result column="postfamilyid" property="postfamilyid" />
		<result column="postgradeid" property="postgradeid" />
		<result column="postrankid" property="postrankid" />
		<result column="postlevelid" property="postlevelid" />
		<result column="postcode" property="postcode" />
		<result column="parentpostid" property="parentpostid" />
		<result column="organization" property="organization" />
		<result column="duty" property="duty" />
		<result column="entryrequirements" property="entryrequirements" />
		<result column="jobdescription" property="jobdescription" />
		<result column="dutyfile" property="dutyfile" />
		<result column="state" property="state" />
		<result column="ordercode" property="ordercode" />
	</resultMap>

	<select id="selectByPostlist" parameterType="java.util.List" resultType="java.util.Map">
		SELECT id,postcode,postname FROM tb_id_post
		WHERE postcode IN
		<foreach collection="postList" item="param" open="(" close=")" separator=",">
			#{param}
		</foreach>
	</select>
	<select id="selectAllPostOfIdPostcodePostnameStateON" resultType="java.util.Map">
		SELECT id,postcode,postname FROM tb_id_post
		WHERE state=1
	</select>

	<select id="getAllPostnames" resultType="java.lang.String">
		select postname from tb_id_post where state=1
	</select>

	<select id="selectPostByPostid" parameterType="java.lang.Integer" resultMap="postMapper">
		select * from tb_id_post
		where id = #{id} and state=1
		ORDER BY ordercode
	</select>

	<select id="selectPostByPostname" parameterType="java.lang.String" resultMap="postMapper">
		select * from tb_id_post
		where postname = #{postname} and state=1
		ORDER BY ordercode
	</select>

	<select id="selectPostByPostcode" parameterType="java.lang.String" resultMap="postMapper">
		select * from tb_id_post
		where postcode = #{postcode}
		ORDER BY ordercode
	</select>

	<select id="selectPostByPostcodePostON" parameterType="java.lang.String" resultMap="postMapper">
		select * from tb_id_post
		where postcode = #{postcode} and state=1
		ORDER BY ordercode
	</select>

	<select id="selectPostByPostcodePostOFF" parameterType="java.lang.String" resultMap="postMapper">
		select * from tb_id_post
		where postcode = #{postcode} and state=0
		ORDER BY ordercode
	</select>

	<select id="selectAllPosts" resultMap="postMapper">
		select * from tb_id_post WHERE state=1
		ORDER BY ordercode
	</select>

	<select id="selectPostsByParentpostid" parameterType="java.lang.Integer" resultMap="postMapper">
		select * from tb_id_post
		<where>
			<if test="parentpostid!=null">
				parentpostid = #{parentpostid}
			</if>
			<if test="parentpostid==null">
				parentpostid is null
			</if>
			and state=1
		</where>
		ORDER BY ordercode
	</select>

	<select id="getAllPostidAndPostnameByPostON" resultType="java.util.Map">
		SELECT post.id AS postId,post.postname AS postName
		FROM tb_id_post post
		WHERE state=1
	</select>

	<select id="selectPostlistToStringByUserid" parameterType="java.lang.Integer" resultType="java.lang.String">
		SELECT
			postinfo.postlist AS postnames
		FROM
			tb_id_user u
		LEFT JOIN tb_id_personalinformation per ON per.userid = u.id
		LEFT JOIN (
			SELECT
				rs.perid AS perid,
				GROUP_CONCAT(
					post.postname SEPARATOR ';'
				) AS postlist
			FROM
				tb_id_personalinformation per
			JOIN tb_hr_per_and_post_rs rs ON rs.perid = per.id
			JOIN tb_id_post post ON post.id = rs.postid
		) postinfo ON postinfo.perid = per.id
		WHERE u.id = #{userid};
	</select>

	<insert id="insertOne" parameterType="Post" useGeneratedKeys="true" keyProperty="id">
		insert into tb_id_post
		(id,
		 postname,
		 functionaltypeid,
		 postfamilyid,
		 postgradeid,
		 postrankid,
		 postlevelid,
		 postcode,
		 parentpostid,
		 organization,
		 duty,
		 entryrequirements,
		 jobdescription,
		 dutyfile,state,
		 ordercode)
		VALUES
		(NULL ,
		#{postname},
		#{functionaltypeid},
		#{postfamilyid},
		#{postgradeid},
		#{postrankid},
		#{postlevelid},
		#{postcode},
		#{parentpostid},
		#{organization},
		#{duty},
		#{entryrequirements},
		#{jobdescription},
		#{dutyfile},1,#{ordercode})
	</insert>

	<update id="updateOne" parameterType="Post">
		UPDATE tb_id_post
		<set>
			<if test="postname!=null and postname!=''" >postname=#{postname},</if>
			<if test="functionaltypeid!=null and functionaltypeid!=''" >functionaltypeid=#{functionaltypeid},</if>
			<if test="functionaltypeid==null or functionaltypeid==''" >functionaltypeid=NULL,</if>
			<if test="postfamilyid!=null and postfamilyid!=''" >postfamilyid=#{postfamilyid},</if>
			<if test="postgradeid!=null and postgradeid!=''" >postgradeid=#{postgradeid},</if>
			<if test="postrankid!=null and postrankid!=''" >postrankid=#{postrankid},</if>
			<if test="postlevelid!=null and postlevelid!=''" >postlevelid=#{postlevelid},</if>
			<if test="postcode!=null and postcode!=''" >postcode=#{postcode},</if>
			<if test="parentpostid!=null and parentpostid!=''" >parentpostid=#{parentpostid},</if>
			<if test="organization!=null " >organization=#{organization},</if>
			<if test="duty!=null " >duty=#{duty},</if>
			<if test="entryrequirements!=null " >entryrequirements=#{entryrequirements},</if>
			<if test="jobdescription!=null " >jobdescription=#{jobdescription},</if>
			<if test="dutyfile!=null and dutyfile!=''" >dutyfile=#{dutyfile}</if>
			<if test="ordercode!=null and ordercode!=''" >ordercode=#{ordercode}</if>
		</set>
		WHERE id=#{id}
	</update>

	<delete id="deleteOne" parameterType="java.lang.Integer">
		DELETE FROM tb_id_post
		WHERE id=#{_parameter,jdbcType=NUMERIC}
	</delete>

	<update id="deleteByChangeStatePostOFF" parameterType="java.lang.Integer">
		UPDATE tb_id_post
		SET state=0
		WHERE id=#{id}
	</update>

</mapper>
